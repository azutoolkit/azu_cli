# Model Generator Configuration
extends: "base.yml"

# Model-specific settings
type: "model"
category: "data"
description: "Generate CQL Active Record models with validations and relationships"

# Directories specific to models
directories:
  source: "src/models"
  spec: "spec/models"
  migrations: "src/db/migrations"

# Templates for model generation
templates:
  main: "model/model.cr.ecr"
  spec: "model/model_spec.cr.ecr"
  migration: "migration/migration.cr.ecr"

# CQL-specific model configurations
cql:
  # Base class for models
  base_class: "CQL::Model"

  # Default table naming convention
  table_naming: "snake_case_plural"

  # Primary key configuration
  primary_key:
    type: "Int64"
    auto_increment: true
    column_name: "id"

  # Timestamp columns
  timestamps:
    enabled: true
    created_at: "created_at"
    updated_at: "updated_at"
    type: "Time"

  # Soft deletes
  soft_deletes:
    enabled: false
    column_name: "deleted_at"
    type: "Time?"

# Model attribute types and their CQL equivalents
attribute_types:
  string:
    crystal_type: "String"
    db_type: "VARCHAR(255)"
    validation: "presence"

  text:
    crystal_type: "String"
    db_type: "TEXT"
    validation: "presence"

  integer:
    crystal_type: "Int32"
    db_type: "INTEGER"
    validation: "presence"

  bigint:
    crystal_type: "Int64"
    db_type: "BIGINT"
    validation: "presence"

  float:
    crystal_type: "Float64"
    db_type: "FLOAT"
    validation: "numericality"

  decimal:
    crystal_type: "Float64"
    db_type: "DECIMAL(10,2)"
    validation: "numericality"

  boolean:
    crystal_type: "Bool"
    db_type: "BOOLEAN"
    default: false

  datetime:
    crystal_type: "Time"
    db_type: "TIMESTAMP"
    validation: "presence"

  date:
    crystal_type: "Time"
    db_type: "DATE"
    validation: "presence"

  time:
    crystal_type: "Time"
    db_type: "TIME"
    validation: "presence"

  json:
    crystal_type: "JSON::Any"
    db_type: "JSON"
    validation: "presence"

  uuid:
    crystal_type: "UUID"
    db_type: "UUID"
    validation: "presence"

# Common model validations
default_validations:
  email:
    - "presence: true"
    - "format: /\\A[\\w+\\-.]+@[a-z\\d\\-]+(\\.[a-z\\d\\-]+)*\\.[a-z]+\\z/i"
    - "uniqueness: true"

  name:
    - "presence: true"
    - "length: {min: 2, max: 100}"

  title:
    - "presence: true"
    - "length: {min: 1, max: 255}"

  description:
    - "length: {max: 1000}"

  url:
    - "format: /\\Ahttps?:\\/\\/.+\\z/"

  phone:
    - "format: /\\A[\\d\\-\\+\\(\\)\\s]+\\z/"

# Association types and patterns
associations:
  belongs_to:
    pattern: "belongs_to :%{association_name}, foreign_key: :%{foreign_key}"
    foreign_key_pattern: "%{association_name}_id"
    type: "Int64?"

  has_many:
    pattern: "has_many :%{association_name}, foreign_key: :%{foreign_key}"
    foreign_key_pattern: "%{model_name}_id"

  has_one:
    pattern: "has_one :%{association_name}, foreign_key: :%{foreign_key}"
    foreign_key_pattern: "%{model_name}_id"

  many_to_many:
    pattern: "has_many :%{association_name}, through: :%{join_table}"
    join_table_pattern: "%{model1}_%{model2}"

# Index patterns
indexes:
  unique:
    pattern: "index :%{columns}, unique: true"

  regular:
    pattern: "index :%{columns}"

  foreign_key:
    pattern: "index :%{foreign_key_column}"
    auto_generate: true

# Default model methods to generate
default_methods:
  - "to_s(io : IO) : Nil"
  - "to_h : Hash(String, String | Int32 | Int64 | Float64 | Bool | Time | Nil)"

# Migration auto-generation
auto_migration:
  enabled: true
  create_table: true
  add_indexes: true
  add_foreign_keys: true

# Usage examples
usage_examples:
  - "azu generate model User name:string email:string"
  - "azu generate model Post title:string content:text author_id:integer published:boolean"
  - "azu generate model Product name:string price:decimal category_id:integer active:boolean"
  - "azu generate model Comment content:text post_id:integer user_id:integer"

# Next steps
next_steps:
  - "Create a migration: azu generate migration create_%{snake_case_name}s_table"
  - "Run the migration: azu db:migrate"
  - "Add validations and associations to your model"
  - "Test your model in spec/models/%{snake_case_name}_spec.cr"
