description: "Generate new Azu project with full structure"

# Template configurations
templates:
  main: "project/project.cr.ecr"
  shard: "project/shard.yml.ecr"
  readme: "project/README.md.ecr"
  spec_helper: "project/spec/spec_helper.cr.ecr"
  spec_main: "project/spec/{{project}}_spec.cr.ecr"
  server: "project/src/server.cr.ecr"
  database_init: "project/src/initializers/database.cr.ecr"
  logger_init: "project/src/initializers/logger.cr.ecr"
  schema: "project/src/db/schema.cr.ecr"
  seed: "project/src/db/seed.cr.ecr"
  db_readme: "project/src/db/README.md.ecr"
  taskfile: "project/tasks/taskfile.cr.ecr"

# Project-type-specific directory structures
directories:
  web:
    - "src"
    - "spec"
    - "tasks"
    - "src/initializers"
    - "src/db"
    - "src/db/migrations"
    - "src/endpoints"
    - "src/contracts"
    - "src/pages"
    - "src/models"
    - "src/services"
    - "src/middlewares"
    - "src/components"
    - "src/validators"
    - "src/jobs"
    - "src/mailers"
    - "src/errors"
    - "src/requests"
    - "src/responses"
    - "src/views"
    - "src/views/layouts"
    - "public"
    - "public/assets"
    - "public/assets/css"
    - "public/assets/js"
    - "public/templates"
    - "public/templates/helpers"
    - "spec/endpoints"
    - "spec/contracts"
    - "spec/pages"
    - "spec/models"
    - "spec/services"
    - "spec/validators"

  api:
    - "src"
    - "spec"
    - "tasks"
    - "src/initializers"
    - "src/db"
    - "src/db/migrations"
    - "src/endpoints"
    - "src/contracts"
    - "src/models"
    - "src/services"
    - "src/middlewares"
    - "src/validators"
    - "src/jobs"
    - "src/mailers"
    - "src/errors"
    - "src/requests"
    - "src/responses"
    - "spec/endpoints"
    - "spec/contracts"
    - "spec/models"
    - "spec/services"
    - "spec/validators"

  cli:
    - "src"
    - "spec"
    - "tasks"
    - "src/initializers"
    - "src/commands"
    - "src/services"
    - "src/errors"
    - "spec/commands"
    - "spec/services"

# Project types configuration
project_types:
  web:
    name: "Full-stack Web Application"
    description: "Complete web application with frontend and backend"
    features:
      ["Endpoints", "Views", "Models", "Authentication", "Asset Pipeline"]
    templates:
      [
        "main",
        "shard",
        "readme",
        "spec_helper",
        "spec_main",
        "taskfile",
        "server",
        "database_init",
        "logger_init",
        "schema",
        "seed",
        "db_readme",
      ]
    copy_assets: true
    copy_templates: true

  api:
    name: "API-only Application"
    description: "RESTful API server without frontend components"
    features: ["Endpoints", "Models", "JSON serialization", "API versioning"]
    templates:
      [
        "main",
        "shard",
        "readme",
        "spec_helper",
        "spec_main",
        "taskfile",
        "server",
        "database_init",
        "logger_init",
        "schema",
        "seed",
        "db_readme",
      ]
    copy_assets: false
    copy_templates: false

  cli:
    name: "Command Line Interface"
    description: "CLI application using Crystal and Topia"
    features:
      ["Command structure", "Argument parsing", "Configuration", "Testing"]
    templates:
      ["main", "shard", "readme", "spec_helper", "spec_main", "taskfile"]
    copy_assets: false
    copy_templates: false

# Database configurations
databases:
  postgresql: &db_base
    url: "postgresql://localhost/{{project}}_development"
    driver: "pg"
    adapter: "postgresql"
  mysql:
    <<: *db_base
    url: "mysql://localhost/{{project}}_development"
    driver: "mysql"
    adapter: "mysql"
  sqlite:
    <<: *db_base
    url: "sqlite3://./db/{{project}}_development.db"
    driver: "sqlite3"
    adapter: "sqlite3"

# Validation rules
validation:
  name:
    required: true
    pattern: "^[a-zA-Z][a-zA-Z0-9_-]*$"
    min_length: 1
    max_length: 50
  project_type:
    required: true
    allowed_values: ["web", "api", "cli"]
  database:
    required: true
    allowed_values: ["postgresql", "mysql", "sqlite"]

# Template output path mappings
template_output_paths:
  main: "src/{{project}}.cr"
  shard: "shard.yml"
  readme: "README.md"
  spec_helper: "spec/spec_helper.cr"
  spec_main: "spec/{{project}}_spec.cr"
  server: "src/server.cr"
  database_init: "src/initializers/database.cr"
  logger_init: "src/initializers/logger.cr"
  schema: "src/db/schema.cr"
  seed: "src/db/seed.cr"
  db_readme: "src/db/README.md"
  taskfile: "tasks/taskfile.cr"

# Project-type-specific placeholder directories
placeholder_directories:
  web: &web_placeholders
    - "src/models"
    - "src/services"
    - "src/middlewares"
    - "src/components"
    - "src/validators"
    - "src/jobs"
    - "src/mailers"
    - "src/errors"
    - "src/requests"
    - "src/responses"
    - "src/views/layouts"
  api: &api_placeholders
    - "src/models"
    - "src/services"
    - "src/middlewares"
    - "src/validators"
    - "src/jobs"
    - "src/mailers"
    - "src/errors"
  cli:
    - "src/commands"
    - "src/services"
    - "src/errors"

# Project-type-specific placeholder files
placeholder_files:
  web: &models_file
    models_readme:
      path: "src/models/your_models_goes_here.txt"
      content: "Your CQL models will be generated here.\n"
  api: *models_file
  cli:
    commands_readme:
      path: "src/commands/your_commands_go_here.txt"
      content: "Your CLI commands will be generated here.\n"

# Project-type-specific scaffold configurations
scaffolds:
  web:
    welcome:
      name: "Welcome"
      description: "Welcome page endpoint with Jinja templates"
      actions: ["index"]
      attributes: {}
      skip_components: ["migration", "model", "service"]
      options:
        web_only: false
        api_only: false
  api:
    welcome:
      name: "Welcome"
      description: "Welcome API endpoint"
      actions: ["index"]
      attributes: {}
      skip_components: ["migration", "model", "service", "page"]
      options:
        api_only: true

# Post-generation tasks
post_generation:
  git_init: true
  install_deps: true
  show_success: true
