# Contract Generator Configuration
extends: "base.yml"

# Contract-specific settings
type: "contract"
category: "validation"
description: "Generate request/response contracts for validation"

# Directories specific to contracts
directories:
  source: "src/contracts"
  spec: "spec/contracts"

# Templates for contract generation
templates:
  main: "contract/contract.cr.ecr"
  spec: "contract/contract_spec.cr.ecr"

# Default attributes for contracts
default_attributes:
  # Contracts are typically empty by default and get attributes from arguments

# Validation patterns for contract fields
validation_patterns:
  presence: "validate :%{field}, presence: true"
  length: "validate :%{field}, length: {min: %{min}, max: %{max}}"
  format: "validate :%{field}, format: %{pattern}"
  uniqueness: "validate :%{field}, uniqueness: true"
  numericality: "validate :%{field}, numericality: {greater_than: %{min}}"
  custom: "validate :%{field}, custom: %{validator_class}"

# Contract types and their characteristics
contract_types:
  request:
    description: "Request validation contract"
    includes: ["validation", "parameter_extraction"]
    
  response:
    description: "Response formatting contract" 
    includes: ["data_formatting", "serialization"]

# Usage examples
usage_examples:
  - "azu generate contract UserContract name:string email:string"
  - "azu generate contract LoginContract email:string password:string"
  - "azu generate contract ApiResponse data:hash status:string"

# Next steps
next_steps:
  - "Customize validation rules in src/contracts/%{snake_case_name}.cr"
  - "Use in your endpoints: include Endpoint(%{class_name}, ResponseClass)"
  - "Add custom validation methods if needed"
  - "Test your contract in spec/contracts/%{snake_case_name}_spec.cr"

# Test value generators for contracts
test_values:
  string: '"Test Contract"'
  integer: "42"
  big_integer: "42_i64"
  float: "3.14"
  boolean: "true"
  datetime: "Time.utc"
  json: '{"key" => "value"}'
  uuid: "UUID.random"
  email: '"test@example.com"'
  password: '"SecurePass123!"'