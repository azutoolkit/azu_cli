<% if @project_type == "cli" -%>
require "option_parser"

module <%= @module_name %>
  VERSION = "0.1.0"

  def self.run(args : Array(String))
    option_parser = OptionParser.parse(args) do |parser|
      parser.banner = "Usage: <%= @project %> [options]"

      parser.on("-v", "--version", "Show version") do
        puts "v#{VERSION}"
        exit
      end

      parser.on("-h", "--help", "Show help") do
        puts parser
        exit
      end

<% if @include_example -%>
      parser.on("--hello NAME", "Say hello to NAME") do |name|
        puts "Hello, #{name}!"
        exit
      end
<% end -%>
    end

<% if @include_example -%>
    # If no arguments provided, show help
    if args.empty?
      puts option_parser
      exit
    end
<% end -%>
  end
end
<%= @module_name %>.run(ARGV)
<% else -%>
require "azu"
require "./initializers/**"
require "./db/**"

# Azu Framework Application
# Docs: https://azutoolkit.org
module <%= @module_name %>
  include Azu
  VERSION = "0.1.0"

  configure do |c|
<% if @project_type == "api" -%>
    # API Configuration
    c.router.before "*", Handler::CORS.new
<% else -%>
    # Web Application Configuration
    # Uncomment to enable Spark real time apps
    # Docs: https://azutoolkit.org/spark
    # c.router.ws "/live-view", Spark
    c.templates.path = "./public/templates"
    # Serve static files
    c.router.get "/*", Handler::Static.new
<% end -%>
  end

<% if @project_type == "web" -%>
  Azu::Handler::CSRF.configure do |csrf|
    csrf.strategy = Azu::Handler::CSRF::Strategy::SignedDoubleSubmit
    csrf.secret_key = "1234567890"
  end

<% end -%>
  def self.handlers
    [
<% if @project_type == "web" -%>
      Azu::Handler::CSRF.new,
<% end -%>
      Azu::Handler::RequestId.new,
      Azu::Handler::Rescuer.new,
      Azu::Handler::Logger.new,
    ]
  end
end

require "./schemas/**"
require "./models/**"
require "./responses/**"
<% if @project_type == "web" -%>
require "./pages/**"
<% end -%>
require "./requests/**"
require "./endpoints/**"
<% end -%>
