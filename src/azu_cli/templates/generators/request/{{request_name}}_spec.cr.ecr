require "spec"
require "../spec_helper"
require "../../src/requests/<%= request_name %>"

describe <%= request_name_camelcase %> do
  describe "request structure" do
    it "includes Azu::Request" do
      request = <%= request_name_camelcase %>.new
      request.should be_a(Azu::Request)
    end

    it "can be instantiated" do
      request = <%= request_name_camelcase %>.new
      request.should be_a(<%= request_name_camelcase %>)
    end
  end

<%- unless properties.empty? -%>
  describe "properties" do
<%- properties.each do |prop| -%>
    it "has <%= prop[:name] %> property" do
      request = <%= request_name_camelcase %>.new
      request.should respond_to(:<%= prop[:name] %>)
    end

    it "validates <%= prop[:name] %> type" do
      request = <%= request_name_camelcase %>.new
      request.<%= prop[:name] %>.should be_a(<%= prop[:type] %>)
    end

<%- unless prop[:validations].empty? -%>
    it "validates <%= prop[:name] %> rules" do
      # Test validation rules: <%= prop[:validations].join(", ") %>
      # Add specific validation tests for <%= prop[:name] %>
    end
<%- end -%>
<%- end -%>
  end

  describe "initialization" do
    it "sets default values" do
      request = <%= request_name_camelcase %>.new
<%- properties.each do |prop| -%>
      request.<%= prop[:name] %>.should eq(<%= prop[:default] %>)
<%- end -%>
    end

    it "accepts custom values" do
      # Test initialization with custom values
      # request = <%= request_name_camelcase %>.new(param1: value1, param2: value2)
    end
  end
<%- end -%>

  describe "validation" do
    it "validates valid request" do
      request = <%= request_name_camelcase %>.new
      # Set valid values
      # request.valid?.should be_true
    end

    it "rejects invalid request" do
      request = <%= request_name_camelcase %>.new
      # Set invalid values
      # request.valid?.should be_false
    end
  end

  describe "serialization" do
    it "can be converted to hash" do
      request = <%= request_name_camelcase %>.new
      # request.to_h.should be_a(Hash)
    end

    it "can be converted to JSON" do
      request = <%= request_name_camelcase %>.new
      # request.to_json.should be_a(String)
    end
  end
end
